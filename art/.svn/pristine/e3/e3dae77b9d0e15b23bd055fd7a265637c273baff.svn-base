package com.golead.art.app.commentary.service.impl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;
import com.golead.core.dao.model.PageQuery;
import com.golead.core.exception.ServiceException;
import com.golead.core.exception.DAOException;
import com.golead.core.service.impl.BaseServiceImpl;
import com.golead.core.util.ConvertUtil;

import com.golead.art.app.commentary.dao.ArtCommentaryDao;
import com.golead.art.app.commentary.model.ArtCommentary;
import com.golead.art.app.commentary.service.ArtCommentaryService;
import javax.annotation.Resource; 
import org.springframework.stereotype.Service;

@Service
public class ArtCommentaryServiceImpl extends BaseServiceImpl implements ArtCommentaryService {
	private static final long serialVersionUID = 1L;

	public ArtCommentary getArtCommentary(Serializable id) throws ServiceException {
		try {
			return artCommentaryDao.get(id);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void createArtCommentary(ArtCommentary artCommentary) throws ServiceException {
		try {
			artCommentaryDao.save(artCommentary);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void updateArtCommentary(Map<String, String> artCommentaryMap) throws ServiceException {
		try {
            Integer pkId = new Integer(artCommentaryMap.get(ArtCommentary.PROP_ID));
			ArtCommentary tmp = artCommentaryDao.get(pkId);
			ConvertUtil.mapToObject(tmp, artCommentaryMap, true);			
			artCommentaryDao.update(tmp);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void deleteArtCommentary(Serializable id) throws ServiceException {
		try {
			artCommentaryDao.delete(id);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void deleteArtCommentarys(Serializable[] ids) throws ServiceException {
		try {
			artCommentaryDao.deleteAll(ids);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public PageQuery queryArtCommentary(PageQuery pageQuery) throws ServiceException {
		try {
		  createSqlFilter(pageQuery);
          return jdbcDao.queryBySqlId("artCommentaryList", pageQuery);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}
	
	private void createSqlFilter(PageQuery page) {
	}
	
    @Resource
	private ArtCommentaryDao	artCommentaryDao;

	public void setArtCommentaryDao(ArtCommentaryDao artCommentaryDao) {
		this.artCommentaryDao = artCommentaryDao;
	}
}

