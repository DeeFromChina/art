package com.golead.art.app.appUser.service.impl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;
import com.golead.core.dao.model.PageQuery;
import com.golead.core.exception.ServiceException;
import com.golead.core.exception.DAOException;
import com.golead.core.service.impl.BaseServiceImpl;
import com.golead.core.util.ConvertUtil;

import com.golead.art.app.appUser.dao.ArtAppUserDao;
import com.golead.art.app.appUser.model.ArtAppUser;
import com.golead.art.app.appUser.service.ArtAppUserService;
import javax.annotation.Resource; 
import org.springframework.stereotype.Service;

@Service
public class ArtAppUserServiceImpl extends BaseServiceImpl implements ArtAppUserService {
	private static final long serialVersionUID = 1L;

	public ArtAppUser getArtAppUser(Serializable id) throws ServiceException {
		try {
			return artAppUserDao.get(id);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void createArtAppUser(ArtAppUser artAppUser) throws ServiceException {
		try {
			artAppUserDao.save(artAppUser);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void updateArtAppUser(Map<String, String> artAppUserMap) throws ServiceException {
		try {
            Integer pkId = new Integer(artAppUserMap.get(ArtAppUser.PROP_ID));
			ArtAppUser tmp = artAppUserDao.get(pkId);
			ConvertUtil.mapToObject(tmp, artAppUserMap, true);			
			artAppUserDao.update(tmp);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void deleteArtAppUser(Serializable id) throws ServiceException {
		try {
			artAppUserDao.delete(id);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void deleteArtAppUsers(Serializable[] ids) throws ServiceException {
		try {
			artAppUserDao.deleteAll(ids);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public PageQuery queryArtAppUser(PageQuery pageQuery) throws ServiceException {
		try {
		  createSqlFilter(pageQuery);
          return jdbcDao.queryBySqlId("artAppUserList", pageQuery);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}
	
	private void createSqlFilter(PageQuery page) {
	}
	
    @Resource
	private ArtAppUserDao	artAppUserDao;

	public void setArtAppUserDao(ArtAppUserDao artAppUserDao) {
		this.artAppUserDao = artAppUserDao;
	}
}

