package com.golead.art.literature.service.impl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;
import com.golead.core.dao.model.PageQuery;
import com.golead.core.exception.ServiceException;
import com.golead.core.exception.DAOException;
import com.golead.core.service.impl.BaseServiceImpl;
import com.golead.core.util.ConvertUtil;

import com.golead.art.literature.dao.ArtLiteratureCollectDao;
import com.golead.art.literature.model.ArtLiteratureCollect;
import com.golead.art.literature.service.ArtLiteratureCollectService;
import javax.annotation.Resource; 
import org.springframework.stereotype.Service;

@Service
public class ArtLiteratureCollectServiceImpl extends BaseServiceImpl implements ArtLiteratureCollectService {
	private static final long serialVersionUID = 1L;

	public ArtLiteratureCollect getArtLiteratureCollect(Serializable id) throws ServiceException {
		try {
			return artLiteratureCollectDao.get(id);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void createArtLiteratureCollect(ArtLiteratureCollect artLiteratureCollect) throws ServiceException {
		try {
			artLiteratureCollectDao.save(artLiteratureCollect);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void updateArtLiteratureCollect(Map<String, String> artLiteratureCollectMap) throws ServiceException {
		try {
            Integer pkId = new Integer(artLiteratureCollectMap.get(ArtLiteratureCollect.PROP_ID));
			ArtLiteratureCollect tmp = artLiteratureCollectDao.get(pkId);
			ConvertUtil.mapToObject(tmp, artLiteratureCollectMap, true);			
			artLiteratureCollectDao.update(tmp);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void deleteArtLiteratureCollect(Serializable id) throws ServiceException {
		try {
			artLiteratureCollectDao.delete(id);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void deleteArtLiteratureCollects(Serializable[] ids) throws ServiceException {
		try {
			artLiteratureCollectDao.deleteAll(ids);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public PageQuery queryArtLiteratureCollect(PageQuery pageQuery) throws ServiceException {
		try {
		  createSqlFilter(pageQuery);
          return jdbcDao.queryBySqlId("artLiteratureCollectList", pageQuery);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}
	
	private void createSqlFilter(PageQuery page) {
	}
	
    @Resource
	private ArtLiteratureCollectDao	artLiteratureCollectDao;

	public void setArtLiteratureCollectDao(ArtLiteratureCollectDao artLiteratureCollectDao) {
		this.artLiteratureCollectDao = artLiteratureCollectDao;
	}
}

