package com.golead.art.literature.service.impl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;
import com.golead.core.dao.model.PageQuery;
import com.golead.core.exception.ServiceException;
import com.golead.core.exception.DAOException;
import com.golead.core.service.impl.BaseServiceImpl;
import com.golead.core.util.ConvertUtil;

import com.golead.art.literature.dao.ArtLiteratureActivityDao;
import com.golead.art.literature.model.ArtLiteratureActivity;
import com.golead.art.literature.service.ArtLiteratureActivityService;
import javax.annotation.Resource; 
import org.springframework.stereotype.Service;

@Service
public class ArtLiteratureActivityServiceImpl extends BaseServiceImpl implements ArtLiteratureActivityService {
	private static final long serialVersionUID = 1L;

	public ArtLiteratureActivity getArtLiteratureActivity(Serializable id) throws ServiceException {
		try {
			return artLiteratureActivityDao.get(id);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void createArtLiteratureActivity(ArtLiteratureActivity artLiteratureActivity) throws ServiceException {
		try {
			artLiteratureActivityDao.save(artLiteratureActivity);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void updateArtLiteratureActivity(Map<String, String> artLiteratureActivityMap) throws ServiceException {
		try {
            Integer pkId = new Integer(artLiteratureActivityMap.get(ArtLiteratureActivity.PROP_ID));
			ArtLiteratureActivity tmp = artLiteratureActivityDao.get(pkId);
			ConvertUtil.mapToObject(tmp, artLiteratureActivityMap, true);			
			artLiteratureActivityDao.update(tmp);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void deleteArtLiteratureActivity(Serializable id) throws ServiceException {
		try {
			artLiteratureActivityDao.delete(id);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public void deleteArtLiteratureActivitys(Serializable[] ids) throws ServiceException {
		try {
			artLiteratureActivityDao.deleteAll(ids);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}

	public PageQuery queryArtLiteratureActivity(PageQuery pageQuery) throws ServiceException {
		try {
		  createSqlFilter(pageQuery);
          return jdbcDao.queryBySqlId("artLiteratureActivityList", pageQuery);
        } catch (DAOException e) {
          e.printStackTrace();
          throw new ServiceException("数据库操作错误。");
        } catch (ServiceException se) {
          se.printStackTrace();
          throw se;
        } catch (Exception e) {
          e.printStackTrace();
          throw new ServiceException("系统错误。");
        }
	}
	
	private void createSqlFilter(PageQuery page) {
	}
	
    @Resource
	private ArtLiteratureActivityDao	artLiteratureActivityDao;

	public void setArtLiteratureActivityDao(ArtLiteratureActivityDao artLiteratureActivityDao) {
		this.artLiteratureActivityDao = artLiteratureActivityDao;
	}
}

